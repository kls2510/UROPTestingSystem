<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- This is a checkstyle configuration file. For descriptions of
what the following rules do, please see the checkstyle configuration
page at http://checkstyle.sourceforge.net/config.html -->

<module name="Checker">
	<!-- check for presence of TODO or FIXME in comments -->
	<module name="RegexpSingleline">
	    <property name="format" value="((//.*)|(\*.*))((TO|to|To)\-*(DO|do|Do)|FIXME|fixme|FixMe|Fixme)" />
	    <property name="message" value='TODO or FIXME found in comment'/>
	</module>
	
	<!-- check for too much whitespace between anything (i.e. more than one space) -->
	<module name="RegexpSingleline">
	    <property name="format"  value="\S\s{2,}\S" />
	    <property name="message" value='Only one space should be used between operators'/>
	</module>
	
	<!-- check for tabs in lines -->
	<module name="RegexpSingleline">
	    <property name="format"  value="\S\t" />
	    <property name="message" value='Tabs should only be used as whitespace at the beginning of lines'/>
	</module>
	
	<!-- check for use += 1 instead of ++ -->
	<module name="RegexpSingleline">
		<property name="format"  value="\+\s*=\s*1" />
		<property name="message" value="Recommend ++ instead of += 1" />
	</module>
	<!-- check for use -= 1 instead of - - -->
	<module name="RegexpSingleline">
		<property name="format"  value="\-\s*=\s*1" />
		<property name="message" value="Recommend -- instead of -= 1" />
	</module>
	
	<module name="TreeWalker">
		<!-- Check Indentation -->
		<!-- <module name="Indentation">
			<property name="caseIndent"      value="4"/>  Checks that case indents are 4 spaces 
			<property name="basicOffset"     value="4"/>  Number of spaces to take as equivalent to tab. Set to tab == 4 spaces 
			<property name="braceAdjustment" value="0"/>  Checks that open braces which are moved to next line are not indented
			<property name="throwsIndent"    value="4"/>  Checks that throws statements which are moved to next line are exactly one indentation level in
		</module> -->
		
		<!-- Checks for redundant import statements. An import is redundant if it is duplicated, in same package, or imports java.lang -->
		<module name="RedundantImport">
			<message key="import.duplicate" value="Duplicate import | ''{1}'' already imported in line ''{0}''" />
		</module>
		
		<!-- Checks for unused imports -->
		<module name="UnusedImports">
			<message key="import.unused" value="Unused import | ''{0}''" />
		</module>
		
		<!-- Checks for empty catch, do, if else, finally. try, for, while, and init blocks, but NOT empty exception declarations. 
				Commented blocks do not count as empty -->
		<module name="EmptyBlock">
   			<property name="tokens" value="LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_IF, LITERAL_FOR, LITERAL_TRY, LITERAL_WHILE, INSTANCE_INIT, STATIC_INIT"/>
   			<property name="option" value="text"/> <!-- Without this, blocks containing only comments would count as being empty -->
   			<message key="block.empty" value="Empty ''{0}'' Block | If it should never run, a justifiying comment in the block is required" />
		</module>
		
		<!-- Checks that the listed tokens are surrounded by whitespace -->
		<module name="WhitespaceAround">
     		<property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR,
        			BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,
        			EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,
        			LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
        			LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,
        			MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,
        			SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN"/>
      		<!-- <property name="message" value="Exact white space around operators required"/> -->
    	</module>
    	
    	<!-- Checks that there is no whitespace before ; . - - ++ -->
    	<module name="NoWhitespaceBefore" />
    	
    	<!-- Checks that there is no whitespace after . ++ - - ! ~ -->
    	<module name="NoWhitespaceAfter">
    		<property name="tokens" value="DOT, INC, DEC, LNOT, BNOT" />
    	</module>
		
		<!-- Checks that strings are not compared with == or != -->
		<module name="StringLiteralEquality">
			<message key="string.literal.equality" value="String comparison with ''{0}'' | In Java, .equals() should be used" />
		</module>
		
		<!-- Check that Java naming conventions are observed -->
		<module name="AbstractClassName" />			<!-- ^Abstract.*$|^.*Factory$ -->
		<module name="ClassTypeParameterName"/>		<!-- ^[A-Z]$ -->
		<module name="ConstantName" />				<!-- ^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$ -->
		<module name="LocalFinalVariableName" />	<!-- ^[a-z][a-zA-Z0-9]*$ -->
		<module name="LocalVariableName" />			<!-- ^[a-z][a-zA-Z0-9]*$ -->
		<module name="MemberName" />				<!-- ^[a-z][a-zA-Z0-9]*$ -->
		<module name="MethodName" />				<!-- ^[a-z][a-zA-Z0-9]*$ -->
		<module name="MethodTypeParameterName" />	<!-- ^[A-Z]$ -->
		<module name="PackageName" />				<!-- ^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$ -->
		<module name="ParameterName" />				<!-- ^[a-z][a-zA-Z0-9]*$ -->
		<module name="StaticVariableName" />		<!-- ^[a-z][a-zA-Z0-9]*$ -->
		<module name="TypeName" />					<!-- ^[A-Z][a-zA-Z0-9]*$ -->
			
		<!-- checks that long variables are declared with an upper case L instead of a lower case l -->
		<module name="UpperEll" />
		
		<!-- checks for Exception, RuntimeException, and Throwable being caught -->
		<module name="IllegalCatch" />
		
		<!-- checks for Exception, RuntimeException, and Throwable being thrown -->
		<module name="IllegalThrows" />		
	</module>
</module>


